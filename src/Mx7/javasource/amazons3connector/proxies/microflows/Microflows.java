// This file was generated by Mendix Modeler 7.23.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package amazons3connector.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;

public class Microflows
{
	// These are the microflows for the AmazonS3Connector module
	public static void aCr_AwsConfig(IContext context, amazons3connector.proxies.AwsConfig _awsConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AwsConfig", _awsConfig == null ? null : _awsConfig.getMendixObject());
			Core.execute(context, "AmazonS3Connector.ACr_AwsConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void afterStartup(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "AmazonS3Connector.AfterStartup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CopyObject(IContext context, amazons3connector.proxies.S3Object _s3Object, amazons3connector.proxies.Explorer _explorer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("S3Object", _s3Object == null ? null : _s3Object.getMendixObject());
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_CopyObject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CopyObjectConfirm(IContext context, amazons3connector.proxies.MoveOrCopyObject _moveOrCopyObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MoveOrCopyObject", _moveOrCopyObject == null ? null : _moveOrCopyObject.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_CopyObjectConfirm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteObject(IContext context, amazons3connector.proxies.Explorer _explorer, amazons3connector.proxies.S3Object _s3Object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			params.put("S3Object", _s3Object == null ? null : _s3Object.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_DeleteObject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DownloadObject(IContext context, amazons3connector.proxies.S3Object _s3Object, amazons3connector.proxies.Explorer _explorer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("S3Object", _s3Object == null ? null : _s3Object.getMendixObject());
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_DownloadObject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EditText(IContext context, amazons3connector.proxies.S3Object _s3Object, amazons3connector.proxies.Explorer _explorer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("S3Object", _s3Object == null ? null : _s3Object.getMendixObject());
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_EditText", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Explore(IContext context, amazons3connector.proxies.AwsConfig _awsConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AwsConfig", _awsConfig == null ? null : _awsConfig.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_Explore", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExploreBucket(IContext context, amazons3connector.proxies.Bucket _bucket, amazons3connector.proxies.Explorer _explorer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Bucket", _bucket == null ? null : _bucket.getMendixObject());
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_ExploreBucket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExplorePrefix(IContext context, amazons3connector.proxies.Prefix _prefix, amazons3connector.proxies.Explorer _explorer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Prefix", _prefix == null ? null : _prefix.getMendixObject());
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_ExplorePrefix", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_FindMostRecent5Objects(IContext context, amazons3connector.proxies.Explorer _explorer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_FindMostRecent5Objects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MoveObject(IContext context, amazons3connector.proxies.S3Object _s3Object, amazons3connector.proxies.Explorer _explorer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("S3Object", _s3Object == null ? null : _s3Object.getMendixObject());
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_MoveObject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MoveObjectConfirm(IContext context, amazons3connector.proxies.MoveOrCopyObject _moveObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MoveObject", _moveObject == null ? null : _moveObject.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_MoveObjectConfirm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RetrieveBuckets(IContext context, amazons3connector.proxies.Explorer _explorer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_RetrieveBuckets", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RetrieveObjects(IContext context, amazons3connector.proxies.Explorer _explorer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_RetrieveObjects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RetrievePrefixes(IContext context, amazons3connector.proxies.Explorer _explorer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_RetrievePrefixes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveAsText(IContext context, amazons3connector.proxies.GetAsText _getAsText)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GetAsText", _getAsText == null ? null : _getAsText.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_SaveAsText", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UploadObject(IContext context, amazons3connector.proxies.Explorer _explorer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_UploadObject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UploadObjectConfirm(IContext context, amazons3connector.proxies.PutObject _putObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PutObject", _putObject == null ? null : _putObject.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_UploadObjectConfirm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ValidateConfiguration(IContext context, amazons3connector.proxies.AwsConfig _awsConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AwsConfig", _awsConfig == null ? null : _awsConfig.getMendixObject());
			Core.execute(context, "AmazonS3Connector.IVK_ValidateConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}