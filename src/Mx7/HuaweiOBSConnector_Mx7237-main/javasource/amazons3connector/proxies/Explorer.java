// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package amazons3connector.proxies;

public class Explorer
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject explorerMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "AmazonS3Connector.Explorer";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Bucket("Bucket"),
		Prefix("Prefix"),
		Explorer_AwsConfig("AmazonS3Connector.Explorer_AwsConfig");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Explorer(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "AmazonS3Connector.Explorer"));
	}

	protected Explorer(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject explorerMendixObject)
	{
		if (explorerMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("AmazonS3Connector.Explorer", explorerMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a AmazonS3Connector.Explorer");

		this.explorerMendixObject = explorerMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Explorer.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static amazons3connector.proxies.Explorer initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return amazons3connector.proxies.Explorer.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static amazons3connector.proxies.Explorer initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new amazons3connector.proxies.Explorer(context, mendixObject);
	}

	public static amazons3connector.proxies.Explorer load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return amazons3connector.proxies.Explorer.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Bucket
	 */
	public final java.lang.String getBucket()
	{
		return getBucket(getContext());
	}

	/**
	 * @param context
	 * @return value of Bucket
	 */
	public final java.lang.String getBucket(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Bucket.toString());
	}

	/**
	 * Set value of Bucket
	 * @param bucket
	 */
	public final void setBucket(java.lang.String bucket)
	{
		setBucket(getContext(), bucket);
	}

	/**
	 * Set value of Bucket
	 * @param context
	 * @param bucket
	 */
	public final void setBucket(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String bucket)
	{
		getMendixObject().setValue(context, MemberNames.Bucket.toString(), bucket);
	}

	/**
	 * @return value of Prefix
	 */
	public final java.lang.String getPrefix()
	{
		return getPrefix(getContext());
	}

	/**
	 * @param context
	 * @return value of Prefix
	 */
	public final java.lang.String getPrefix(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Prefix.toString());
	}

	/**
	 * Set value of Prefix
	 * @param prefix
	 */
	public final void setPrefix(java.lang.String prefix)
	{
		setPrefix(getContext(), prefix);
	}

	/**
	 * Set value of Prefix
	 * @param context
	 * @param prefix
	 */
	public final void setPrefix(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String prefix)
	{
		getMendixObject().setValue(context, MemberNames.Prefix.toString(), prefix);
	}

	/**
	 * @return value of Explorer_AwsConfig
	 */
	public final amazons3connector.proxies.AwsConfig getExplorer_AwsConfig() throws com.mendix.core.CoreException
	{
		return getExplorer_AwsConfig(getContext());
	}

	/**
	 * @param context
	 * @return value of Explorer_AwsConfig
	 */
	public final amazons3connector.proxies.AwsConfig getExplorer_AwsConfig(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		amazons3connector.proxies.AwsConfig result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Explorer_AwsConfig.toString());
		if (identifier != null)
			result = amazons3connector.proxies.AwsConfig.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Explorer_AwsConfig
	 * @param explorer_awsconfig
	 */
	public final void setExplorer_AwsConfig(amazons3connector.proxies.AwsConfig explorer_awsconfig)
	{
		setExplorer_AwsConfig(getContext(), explorer_awsconfig);
	}

	/**
	 * Set value of Explorer_AwsConfig
	 * @param context
	 * @param explorer_awsconfig
	 */
	public final void setExplorer_AwsConfig(com.mendix.systemwideinterfaces.core.IContext context, amazons3connector.proxies.AwsConfig explorer_awsconfig)
	{
		if (explorer_awsconfig == null)
			getMendixObject().setValue(context, MemberNames.Explorer_AwsConfig.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Explorer_AwsConfig.toString(), explorer_awsconfig.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return explorerMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final amazons3connector.proxies.Explorer that = (amazons3connector.proxies.Explorer) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "AmazonS3Connector.Explorer";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
