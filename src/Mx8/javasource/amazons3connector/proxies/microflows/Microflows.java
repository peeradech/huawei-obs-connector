// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package amazons3connector.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;

public class Microflows
{
	// These are the microflows for the AmazonS3Connector module
	public static void aCr_AwsConfig(IContext context, amazons3connector.proxies.AwsConfig _awsConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AwsConfig", _awsConfig == null ? null : _awsConfig.getMendixObject());
		Core.microflowCall("AmazonS3Connector.ACr_AwsConfig").withParams(params).execute(context);
	}
	public static boolean afterStartup(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("AmazonS3Connector.AfterStartup").withParams(params).execute(context);
	}
	public static void iVK_CopyObject(IContext context, amazons3connector.proxies.S3Object _s3Object, amazons3connector.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("S3Object", _s3Object == null ? null : _s3Object.getMendixObject());
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_CopyObject").withParams(params).execute(context);
	}
	public static void iVK_CopyObjectConfirm(IContext context, amazons3connector.proxies.MoveOrCopyObject _moveOrCopyObject)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MoveOrCopyObject", _moveOrCopyObject == null ? null : _moveOrCopyObject.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_CopyObjectConfirm").withParams(params).execute(context);
	}
	public static void iVK_DeleteObject(IContext context, amazons3connector.proxies.Explorer _explorer, amazons3connector.proxies.S3Object _s3Object)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		params.put("S3Object", _s3Object == null ? null : _s3Object.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_DeleteObject").withParams(params).execute(context);
	}
	public static void iVK_DownloadObject(IContext context, amazons3connector.proxies.S3Object _s3Object, amazons3connector.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("S3Object", _s3Object == null ? null : _s3Object.getMendixObject());
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_DownloadObject").withParams(params).execute(context);
	}
	public static void iVK_EditText(IContext context, amazons3connector.proxies.S3Object _s3Object, amazons3connector.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("S3Object", _s3Object == null ? null : _s3Object.getMendixObject());
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_EditText").withParams(params).execute(context);
	}
	public static void iVK_Explore(IContext context, amazons3connector.proxies.AwsConfig _awsConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AwsConfig", _awsConfig == null ? null : _awsConfig.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_Explore").withParams(params).execute(context);
	}
	public static void iVK_ExploreBucket(IContext context, amazons3connector.proxies.Bucket _bucket, amazons3connector.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Bucket", _bucket == null ? null : _bucket.getMendixObject());
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_ExploreBucket").withParams(params).execute(context);
	}
	public static void iVK_ExplorePrefix(IContext context, amazons3connector.proxies.Prefix _prefix, amazons3connector.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Prefix", _prefix == null ? null : _prefix.getMendixObject());
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_ExplorePrefix").withParams(params).execute(context);
	}
	public static void iVK_FindMostRecent5Objects(IContext context, amazons3connector.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_FindMostRecent5Objects").withParams(params).execute(context);
	}
	public static void iVK_MoveObject(IContext context, amazons3connector.proxies.S3Object _s3Object, amazons3connector.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("S3Object", _s3Object == null ? null : _s3Object.getMendixObject());
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_MoveObject").withParams(params).execute(context);
	}
	public static void iVK_MoveObjectConfirm(IContext context, amazons3connector.proxies.MoveOrCopyObject _moveObject)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MoveObject", _moveObject == null ? null : _moveObject.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_MoveObjectConfirm").withParams(params).execute(context);
	}
	public static void iVK_RetrieveBuckets(IContext context, amazons3connector.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_RetrieveBuckets").withParams(params).execute(context);
	}
	public static void iVK_RetrieveObjects(IContext context, amazons3connector.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_RetrieveObjects").withParams(params).execute(context);
	}
	public static void iVK_RetrievePrefixes(IContext context, amazons3connector.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_RetrievePrefixes").withParams(params).execute(context);
	}
	public static void iVK_SaveAsText(IContext context, amazons3connector.proxies.GetAsText _getAsText)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("GetAsText", _getAsText == null ? null : _getAsText.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_SaveAsText").withParams(params).execute(context);
	}
	public static void iVK_UploadObject(IContext context, amazons3connector.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_UploadObject").withParams(params).execute(context);
	}
	public static void iVK_UploadObjectConfirm(IContext context, amazons3connector.proxies.PutObject _putObject)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("PutObject", _putObject == null ? null : _putObject.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_UploadObjectConfirm").withParams(params).execute(context);
	}
	public static void iVK_ValidateConfiguration(IContext context, amazons3connector.proxies.AwsConfig _awsConfig)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AwsConfig", _awsConfig == null ? null : _awsConfig.getMendixObject());
		Core.microflowCall("AmazonS3Connector.IVK_ValidateConfiguration").withParams(params).execute(context);
	}
}